package com.name.cn.mydiary.data.source.local;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.name.cn.mydiary.data.bookdetail.Diary;
import com.name.cn.mydiary.data.bookdetail.Memorandum;
import com.name.cn.mydiary.data.bookdetail.MemorandumItem;
import com.name.cn.mydiary.data.User;
import com.name.cn.mydiary.data.bookdetail.Journal;
import com.name.cn.mydiary.data.BookList;

import com.name.cn.mydiary.data.source.local.DiaryDao;
import com.name.cn.mydiary.data.source.local.MemorandumDao;
import com.name.cn.mydiary.data.source.local.MemorandumItemDao;
import com.name.cn.mydiary.data.source.local.UserDao;
import com.name.cn.mydiary.data.source.local.JournalDao;
import com.name.cn.mydiary.data.source.local.BookListDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig diaryDaoConfig;
    private final DaoConfig memorandumDaoConfig;
    private final DaoConfig memorandumItemDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig journalDaoConfig;
    private final DaoConfig bookListDaoConfig;

    private final DiaryDao diaryDao;
    private final MemorandumDao memorandumDao;
    private final MemorandumItemDao memorandumItemDao;
    private final UserDao userDao;
    private final JournalDao journalDao;
    private final BookListDao bookListDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        diaryDaoConfig = daoConfigMap.get(DiaryDao.class).clone();
        diaryDaoConfig.initIdentityScope(type);

        memorandumDaoConfig = daoConfigMap.get(MemorandumDao.class).clone();
        memorandumDaoConfig.initIdentityScope(type);

        memorandumItemDaoConfig = daoConfigMap.get(MemorandumItemDao.class).clone();
        memorandumItemDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        journalDaoConfig = daoConfigMap.get(JournalDao.class).clone();
        journalDaoConfig.initIdentityScope(type);

        bookListDaoConfig = daoConfigMap.get(BookListDao.class).clone();
        bookListDaoConfig.initIdentityScope(type);

        diaryDao = new DiaryDao(diaryDaoConfig, this);
        memorandumDao = new MemorandumDao(memorandumDaoConfig, this);
        memorandumItemDao = new MemorandumItemDao(memorandumItemDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        journalDao = new JournalDao(journalDaoConfig, this);
        bookListDao = new BookListDao(bookListDaoConfig, this);

        registerDao(Diary.class, diaryDao);
        registerDao(Memorandum.class, memorandumDao);
        registerDao(MemorandumItem.class, memorandumItemDao);
        registerDao(User.class, userDao);
        registerDao(Journal.class, journalDao);
        registerDao(BookList.class, bookListDao);
    }
    
    public void clear() {
        diaryDaoConfig.clearIdentityScope();
        memorandumDaoConfig.clearIdentityScope();
        memorandumItemDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        journalDaoConfig.clearIdentityScope();
        bookListDaoConfig.clearIdentityScope();
    }

    public DiaryDao getDiaryDao() {
        return diaryDao;
    }

    public MemorandumDao getMemorandumDao() {
        return memorandumDao;
    }

    public MemorandumItemDao getMemorandumItemDao() {
        return memorandumItemDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public JournalDao getJournalDao() {
        return journalDao;
    }

    public BookListDao getBookListDao() {
        return bookListDao;
    }

}
